#include "main.h"
using pros::delay;
void skills()
{
    driveUntilRoller();
    chassis->forward(0.002);
    roll(false);
    chassis->stop();
    pidDrive(-30, 0, 3000, 0.1); 
    delay(10);
    std::cout << "boo" << std::endl;
    pidTurn(90, 2.44, 2.5, 0);
    delay(10);
    setIntake(-600);
    pidDrive(45, 90, 5000);
    delay(10);
    setIntake(0);
    pidDrive(15, 90, 5000);
    delay(10);
    driveUntilRoller();
    chassis->forward(0.002);
    roll(false);
    chassis->stop();
    pidDrive(-30, 90, 5000, 0.1); 
    delay(10);
    pidTurn(0, 2.5, 2, 0);
    setIntake(-600);
    pp::runpp(path_s_1, false, 6000, 40);
    delay(10);
    setIntake(0);
    pidTurnToPoint({52, -230}, 2.4, 2, 0, true);
    shootCata();
    pidTurn(-170, 2.41, 2, 0);
    setIntake(-600);
    pidDrive(100, -90, 2500, 0.06);
    delay(10);
    pp::runpp(path_s_2, false, 4000, 40);
    delay(10);
    pidTurnToPoint({52, -230}, 2.4, 2, 0, true);
    shootCata();
    delay(300);
    pp::runpp(path_s_3, true, 3000, 25);
    delay(10);
    pidTurnToPoint({-100, -210}, 2.4, 2, 0, false);
    pp::runpp(path_s_4, true, 3000, 25);
    delay(10);
    pidTurnToPoint({60, -270}, 2.4, 2, 0, true);
    pidDrive(-15, gyro2.get_heading(), 2500, 0.11);
    delay(10);
    shootCata();
    pidTurn(180, 2.41, 2, 0);
    pidDrive(90, 180, 2500, 0.11);
    delay(10);
    pidDrive(20, -90, 2500, 0.11);
    setIntake(0);
    pidTurnToPoint({52, -220}, 2.4, 2, 0, false);
    setIntake(-600);
    shootCata();
    delay(10);
    pp::runpp(path_s_5, true, 3000, 35);
    pp::runpp(path_s_6, false, 5000, 35);
    pidTurnToPoint({52, -220}, 2.4, 2, 0, false);
    shootCata();

}